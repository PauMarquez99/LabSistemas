$date
  Sun Mar 29 00:50:03 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module addsub_tb $end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 1 # t $end
$var reg 1 $ c_flag $end
$var reg 1 % ov_flag $end
$var reg 8 & r[7:0] $end
$scope module addsub0 $end
$var reg 8 ' a[7:0] $end
$var reg 8 ( b[7:0] $end
$var reg 1 ) t $end
$var reg 1 * c_flag $end
$var reg 1 + ov_flag $end
$var reg 8 , r[7:0] $end
$var reg 8 - ca[7:0] $end
$scope module fa0 $end
$var reg 1 . a $end
$var reg 1 / b $end
$var reg 1 0 bc $end
$var reg 1 1 s $end
$var reg 1 2 co $end
$var reg 1 3 cinnot $end
$scope module mux1 $end
$var reg 1 4 a $end
$var reg 1 5 b $end
$var reg 1 6 c $end
$var reg 1 7 d $end
$var reg 1 8 s1 $end
$var reg 1 9 s2 $end
$var reg 1 : z $end
$upscope $end
$scope module mux2 $end
$var reg 1 ; a $end
$var reg 1 < b $end
$var reg 1 = c $end
$var reg 1 > d $end
$var reg 1 ? s1 $end
$var reg 1 @ s2 $end
$var reg 1 A z $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var reg 1 B a $end
$var reg 1 C b $end
$var reg 1 D bc $end
$var reg 1 E s $end
$var reg 1 F co $end
$var reg 1 G cinnot $end
$scope module mux1 $end
$var reg 1 H a $end
$var reg 1 I b $end
$var reg 1 J c $end
$var reg 1 K d $end
$var reg 1 L s1 $end
$var reg 1 M s2 $end
$var reg 1 N z $end
$upscope $end
$scope module mux2 $end
$var reg 1 O a $end
$var reg 1 P b $end
$var reg 1 Q c $end
$var reg 1 R d $end
$var reg 1 S s1 $end
$var reg 1 T s2 $end
$var reg 1 U z $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var reg 1 V a $end
$var reg 1 W b $end
$var reg 1 X bc $end
$var reg 1 Y s $end
$var reg 1 Z co $end
$var reg 1 [ cinnot $end
$scope module mux1 $end
$var reg 1 \ a $end
$var reg 1 ] b $end
$var reg 1 ^ c $end
$var reg 1 _ d $end
$var reg 1 ` s1 $end
$var reg 1 a s2 $end
$var reg 1 b z $end
$upscope $end
$scope module mux2 $end
$var reg 1 c a $end
$var reg 1 d b $end
$var reg 1 e c $end
$var reg 1 f d $end
$var reg 1 g s1 $end
$var reg 1 h s2 $end
$var reg 1 i z $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var reg 1 j a $end
$var reg 1 k b $end
$var reg 1 l bc $end
$var reg 1 m s $end
$var reg 1 n co $end
$var reg 1 o cinnot $end
$scope module mux1 $end
$var reg 1 p a $end
$var reg 1 q b $end
$var reg 1 r c $end
$var reg 1 s d $end
$var reg 1 t s1 $end
$var reg 1 u s2 $end
$var reg 1 v z $end
$upscope $end
$scope module mux2 $end
$var reg 1 w a $end
$var reg 1 x b $end
$var reg 1 y c $end
$var reg 1 z d $end
$var reg 1 { s1 $end
$var reg 1 | s2 $end
$var reg 1 } z $end
$upscope $end
$upscope $end
$scope module fa4 $end
$var reg 1 !" a $end
$var reg 1 "" b $end
$var reg 1 #" bc $end
$var reg 1 $" s $end
$var reg 1 %" co $end
$var reg 1 &" cinnot $end
$scope module mux1 $end
$var reg 1 '" a $end
$var reg 1 (" b $end
$var reg 1 )" c $end
$var reg 1 *" d $end
$var reg 1 +" s1 $end
$var reg 1 ," s2 $end
$var reg 1 -" z $end
$upscope $end
$scope module mux2 $end
$var reg 1 ." a $end
$var reg 1 /" b $end
$var reg 1 0" c $end
$var reg 1 1" d $end
$var reg 1 2" s1 $end
$var reg 1 3" s2 $end
$var reg 1 4" z $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var reg 1 5" a $end
$var reg 1 6" b $end
$var reg 1 7" bc $end
$var reg 1 8" s $end
$var reg 1 9" co $end
$var reg 1 :" cinnot $end
$scope module mux1 $end
$var reg 1 ;" a $end
$var reg 1 <" b $end
$var reg 1 =" c $end
$var reg 1 >" d $end
$var reg 1 ?" s1 $end
$var reg 1 @" s2 $end
$var reg 1 A" z $end
$upscope $end
$scope module mux2 $end
$var reg 1 B" a $end
$var reg 1 C" b $end
$var reg 1 D" c $end
$var reg 1 E" d $end
$var reg 1 F" s1 $end
$var reg 1 G" s2 $end
$var reg 1 H" z $end
$upscope $end
$upscope $end
$scope module fa6 $end
$var reg 1 I" a $end
$var reg 1 J" b $end
$var reg 1 K" bc $end
$var reg 1 L" s $end
$var reg 1 M" co $end
$var reg 1 N" cinnot $end
$scope module mux1 $end
$var reg 1 O" a $end
$var reg 1 P" b $end
$var reg 1 Q" c $end
$var reg 1 R" d $end
$var reg 1 S" s1 $end
$var reg 1 T" s2 $end
$var reg 1 U" z $end
$upscope $end
$scope module mux2 $end
$var reg 1 V" a $end
$var reg 1 W" b $end
$var reg 1 X" c $end
$var reg 1 Y" d $end
$var reg 1 Z" s1 $end
$var reg 1 [" s2 $end
$var reg 1 \" z $end
$upscope $end
$upscope $end
$scope module fa7 $end
$var reg 1 ]" a $end
$var reg 1 ^" b $end
$var reg 1 _" bc $end
$var reg 1 `" s $end
$var reg 1 a" co $end
$var reg 1 b" cinnot $end
$scope module mux1 $end
$var reg 1 c" a $end
$var reg 1 d" b $end
$var reg 1 e" c $end
$var reg 1 f" d $end
$var reg 1 g" s1 $end
$var reg 1 h" s2 $end
$var reg 1 i" z $end
$upscope $end
$scope module mux2 $end
$var reg 1 j" a $end
$var reg 1 k" b $end
$var reg 1 l" c $end
$var reg 1 m" d $end
$var reg 1 n" s1 $end
$var reg 1 o" s2 $end
$var reg 1 p" z $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000101 !
b00000101 "
0#
0$
0%
b00001010 &
b00000101 '
b00000101 (
0)
0*
0+
b00001010 ,
b00000101 -
1.
1/
00
01
12
13
04
15
16
07
18
19
0:
0;
0<
0=
1>
1?
1@
1A
0B
0C
1D
1E
0F
0G
1H
0I
0J
1K
0L
0M
1N
0O
1P
1Q
1R
0S
0T
0U
1V
1W
0X
0Y
1Z
1[
0\
1]
1^
0_
1`
1a
0b
0c
0d
0e
1f
1g
1h
1i
0j
0k
1l
1m
0n
0o
1p
0q
0r
1s
0t
0u
1v
0w
1x
1y
1z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
1&"
0'"
1("
1)"
0*"
0+"
0,"
0-"
0."
0/"
00"
11"
02"
03"
04"
05"
06"
07"
08"
09"
1:"
0;"
1<"
1="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
1E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
1N"
0O"
1P"
1Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
1Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
1b"
0c"
1d"
1e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
1m"
0n"
0o"
0p"
#50000000
